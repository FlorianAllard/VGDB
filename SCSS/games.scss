// npx sass --watch ./SCSS:./CSS
@import "./style";

body {
    @include grid();
    grid-template-columns: 2fr 5fr;
    justify-items: center;
    padding: 0 $side-padding;
    gap: 0 1rem;
}

#banner {
    position: relative;
    grid-column: 1 / -1;
    z-index: -1;
    @include center();
    width: calc(100% + $side-padding * 2);
    height: calc((100dvw * (413 / 1280)) - 2rem);
    max-height: 24rem;
    padding: 2rem;

    &--background {
        position: absolute;
        top: 0;
        width: 100%;
        aspect-ratio: 1280 / 413;
        object-fit: cover;
    }

    &--logo {
        aspect-ratio: 958 / 539;
        height: 100%;
        object-fit: contain;
        z-index: 1;
    }
}

nav > section,
main {
    background-color: var(--surface-color);
    padding: 2rem;
    box-shadow: $shadow;
}

nav,
main,
section {
    @include flex(column);
    width: 100%;
}

main {
    gap: 2rem;
}

nav {
    position: sticky;
    top: 6.75rem;
    height: fit-content;
}

#main--top {
    gap: 0.25rem;

    &--media {
        @include flex();
        margin: 0.75rem 0;

        img {
            width: calc((100% - 1rem) * (600 / 900));
            aspect-ratio: 600 / 900;
        }

        iframe {
            width: calc((100% - 1rem) * (749 / 444));
            aspect-ratio: 749 / 444;
        }
    }
}

table {
    table-layout: auto;
    border-spacing: 0;
}

.table-small {
    font-size: small;
    vertical-align: top;

    th,
    td {
        padding: 0.5rem 0 calc(0.5rem + $outline-width) 0;
    }

    th {
        padding-top: 0;

        &:first-child {
            text-align: left;
        }
    }

    tr:last-child td {
        padding-bottom: 0;
    }

    tr:not(:last-child) td,
    th {
        border-bottom: $outline-width solid var(--background-color);
    }

    i {
        font-size: medium;
        color: $success-color;
    }
}

.table-list {
    tr:not(:last-child) td,
    tr:not(:last-child) th {
        padding-bottom: 1rem;
    }

    th {
        text-align: left;
        vertical-align: top;
        white-space: nowrap;
        padding-right: 4rem;
    }

    .table-separator {
        th,
        td {
            border-bottom: $outline-width solid var(--background-color);
        }

        & + tr th,
        & + tr td {
            padding-top: 1rem;
        }
    }
}

#main--localization--age-ratings {
    ul {
        @include flex();
    }

    li {
        @include flex(column, 0.5rem);
        @include transition();
        align-items: center;
        flex: 1 1 0;
        min-width: 0;
        list-style: none;
        padding: 0.5rem;
        border-radius: $border-radius;
        border: $outline-width solid var(--background-color);

        &:hover {
            cursor: pointer;
            background-color: var(--background-color);
        }
    }

    small {
        width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        text-align: center;
    }

    img {
        aspect-ratio: 1 / 1;
        width: 100%;
        object-fit: contain;
    }
}

#main--localization .table-small {
    tr *:not(:first-child) {
        width: 20%;
        text-align: center;
    }
}

#main--releases .table-small {
    text-align: left;
    margin-bottom: 1rem;

    tr *:not(:nth-child(3)) {
        white-space: nowrap;
        padding-right: 2rem;
    }

    td {
        vertical-align: top;

        br {
            content: "";
            margin: 1em;
            display: block;
            font-size: 20%;
        }
    }
}

#nav--table-of-contents ul {
    li {
        list-style: none;
    }
}

#nav--external-links {
    .grid {
        @include grid(7, 0.5rem);
    }

    a {
        width: 100%;
        aspect-ratio: 1 / 1;
        @include center();
        border-radius: $border-radius / 2;
    }

    img {
        width: 66%;
        height: 66%;
    }
}

#main--additional-content--editions,
#main--additional-content--expansions,
#main--additional-content--dlcs{
    .card {
        overflow: hidden;
        box-shadow: none;
        border-radius: $border-radius;
        border: $outline-width solid var(--background-color);
        outline: none;

        &:hover {
            scale: 1;
            outline: none;
            background-color: var(--background-color);
        }
    }

    >div{
        list-style: none;
        @include grid(4);
    }
}