*,
::before,
::after {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

$neutral100-color: #FFFFFF;
$neutral95-color: #F2F2F2;
$neutral90-color: #E6E6E6;
$neutral85-color: #D9D9D9;
$neutral40-color: #666666;
$neutral35-color: #595959;
$neutral30-color: #4D4D4D;
$neutral25-color: #404040;
$neutral20-color: #333333;
$primary-color: #FE7E01;
$secondary-color: #00BBCA;

$light-mode: (
    surface: $neutral100-color,
    background: $neutral90-color,
    hover: $neutral95-color,
    pressed: $neutral85-color,
    primary: $primary-color,
    secondary: $secondary-color,
    text: $neutral30-color
);

$dark-mode: (
    surface: $neutral35-color,
    background: $neutral25-color,
    hover: $neutral30-color,
    pressed: $neutral20-color,
    primary: $primary-color,
    secondary: $secondary-color,
    text: $neutral100-color
);

@mixin theme($theme) {
    @each $key, $value in $theme {
        --#{$key}-color: #{$value};
    }
}

$side-padding: calc(calc(100vw - 1200px) / 2);
$transition-duration-instant: 100ms;
$transition-duration-smooth: 200ms;
$border-radius: .5rem;
$outline-width: 3px;
$shadow: 0 .125rem .125rem 0 rgba(0, 0, 0, .1);

@mixin flex($direction: row, $gap: 1rem) {
    display: flex;
    flex-direction: $direction;
    gap: $gap;
}

@mixin grid($columns: 2, $gap: 1rem) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

@mixin transition($property: all, $duration: $transition-duration-instant, $ease: ease) {
    transition: $property $duration $ease;
}

%flexElement {
    flex: 1 1 0px;
}

:root {
    @include theme($light-mode);
    color: var(--text-color);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.dark-mode {
    @include theme($dark-mode);
}

input,
select,
textarea,
button {
    font-family: inherit;
    &:focus-visible {
        border: none;
        outline: $outline-width solid var(--secondary-color);
    }
}

header {
    @include flex();
    background-color: $primary-color;
    padding: 1rem $side-padding;
    position: sticky;
    top: 0;
    box-shadow: $shadow;
    z-index: 2;

    div {
        @include flex();
        @extend %flexElement;
    }
}

.icon-button {
    width: 2.5rem;
    height: 2.5rem;
    background-color: transparent;
    border: none;
    border-radius: 50%;
    transition: background-color $transition-duration-instant ease;

    i {
        font-size: 150%;
    }

    &:hover {
        cursor: pointer;
        background-color: var(--hover-color);
    }

    &:active {
        background-color: var(--pressed-color);
    }

    i {
        color: var(--text-color);
    }
}

.search-bar {
    flex-grow: 2;
    position: relative;

    i {
        position: absolute;
        left: .75rem;
        top: 50%;
        translate: 0 -50%;
    }

    input[type="text"] {
        padding: 0 1rem .1rem 2.5rem;
        height: 2.5rem;
        border-radius: $border-radius;
        background-color: var(--surface-color);
        border: none;
        flex-grow: 1;
        font-size: 1rem;
    }
}

div:has(>.user-profile) {
    justify-content: flex-end;
}

.user-profile {
    @include flex(row, calc(.5rem + $outline-width * 2));
    padding: 0 .5rem 0 calc($outline-width * 2);
    border: none;
    background-color: transparent;
    align-items: center;
    color: $neutral100-color;
    border-radius: 1.25rem $border-radius $border-radius 1.25rem;
    transition: all $transition-duration-instant ease;

    &:hover {
        cursor: pointer;
        background-color: var(--hover-color);

        img {
            outline-color: var(--secondary-color);
        }
    }

    &:active {
        background-color: var(--pressed-color);
    }
}

.profile-picture {
    width: calc(2.5rem - $outline-width * 4);
    aspect-ratio: 1;
    border-radius: 50%;
    outline: $outline-width solid var(--text-color);
    outline-offset: $outline-width;
    transition: all $transition-duration-instant ease;
}

h2 {
    font-size: 1.25rem;
}

p{
    font-weight: normal;
}

.section-title {
    @include flex();
    justify-content: space-between;
}

a {
    color: var(--secondary-color);
    text-decoration: none;
    font-weight: 600;

    &:hover {
        text-decoration: underline;
    }
}

body {
    width: 100%;
    height: 100vh;
    background-color: var(--background-color);
}

main {
    @include flex(column, 4rem);
    padding: 4rem $side-padding 4rem $side-padding;
}

section {
    @include flex(column);
    @extend %flexElement;

    &>.content {
        @include flex();
        flex-wrap: wrap;
    }
}

.card {
    color: var(--text-color);
    background-color: var(--surface-color);
    box-shadow: $shadow;
    outline: $outline-width solid transparent;
    transition: all $transition-duration-smooth ease;
    flex-grow: 1;

    b {
        font-weight: bold;
    }

    .cover {
        background-size: cover;
        background-position: center;
    }

    &>.content {
        @include flex(column, 0);
        padding: 1rem;
        justify-content: center;
    }

    &:hover {
        text-decoration: none;
        cursor: pointer;
        box-shadow: none;
        scale: 1.02;
        background-color: var(--hover-color);
        border-radius: $border-radius;
        outline: $outline-width solid var(--secondary-color);
        z-index: 1;
    }

    &:active {
        scale: 1.01;
        background-color: var(--pressed-color);
    }
}

#trending>.content {
    height: 20rem;
}

.card.vertical {
    @include flex(column, 0);

    .cover {
        @include flex(column, .5rem);
        flex-grow: 1;
        justify-content: flex-end;
        align-items: flex-end;
        padding-bottom: 1rem;
    }
}

.cover.landscape {
    background-image: url(/Assets/cover_landscape_placeholder.jpg)
}

.cover.portrait {
    background-image: url(/Assets/cover_portrait_placeholder.jpg)
}

.card.vertical:has(>.cover.landscape) {
    flex: 3 1 0px;
}

.card.vertical:has(>.cover.portrait) {
    flex: 1 1 0px;
}

ul.subtexts {
    @include flex(row, .5rem);
    list-style-type: none;

    li {
        height: min-content;
    }
}

small {
    font-size: .75rem;
}

%rating {
    display: inline-block;
    font-weight: bold;
    padding: 0 1rem 0 .5rem;
    height: 1.5rem;
    border-radius: .25rem 0 0 .25rem;
    color: var(--surface-color);
    width: calc(3.5ch + 1.5rem);
}
.rating-critics {
    @extend %rating;
    background-color: var(--primary-color);
}
.rating-user {
    @extend %rating;
    background-color: var(--secondary-color);
}

section:has(>section) {
    flex-direction: row;
    gap: 4rem;

    &>section .content {
        flex-direction: column;
    }
}

#most-anticipated {
    flex-grow: 3
}

#coming-soon {
    flex-grow: 2;
}

.card.horizontal {
    @include flex(row, 0);

    &:has(>.cover.landscape) {
        height: 6rem;
    }

    &:has(>.cover.portrait) {
        height: 4rem;
    }

    .cover {
        &.landscape {
            aspect-ratio: 205/96;
        }

        &.portrait {
            aspect-ratio: 42/64;
        }
    }

    .content {
        flex-grow: 1;
    }
}

.countdown {
    @include flex(row, .5rem);
    padding: 1rem 1rem 2.25rem 1rem;
    align-items: center;

    div {
        @include flex(row, .25rem);
        position: relative;
    }

    hr {
        width: $outline-width;
        height: 1rem;
    }

    span {
        background-color: var(--background-color);
        padding: .5rem;
        font-size: 1.25rem;
        font-weight: bold;
        border-radius: $border-radius;
    }

    small {
        position: absolute;
        width: 100%;
        bottom: -1.25rem;
        text-align: center;
    }
}

.smaller {
    font-size: .625rem;
}

hr {
    background-color: var(--text-color);
    border: none;
    border-radius: calc($outline-width / 2);
}

#user-reviews>.content {
    @include grid();
}

.user-review {
    @include flex(column,$outline-width);
    height: 16rem;

    .user {
        @include flex();
        align-items: center;
        padding: .75rem 0 .75rem calc(1rem + 2 * $outline-width);
        height: fit-content;
        flex-grow: 0;
        .content {
            flex-grow: 1;
            padding: 0;
        }
    }

    .review {
        @include flex();
        padding: 1rem;
        flex-grow: 1;

        .content {
            padding: 0;
            gap: .5rem;
        }

        p {
            overflow: hidden;
            max-lines: 3;
            text-overflow: ellipsis;
            flex: 1 1 0px;
            margin-bottom: .5rem;
        }

        ul {
            justify-content: flex-end;
        }
    }
}

.game-cover {
    @include flex(column, 0);
    aspect-ratio: 93/152;
    outline: $outline-width solid black;
    border-radius: calc($border-radius / 2);
    flex: 1 1 0px;

    .game-cover-platform {
        width: 100%;
    }

    .cover {
        flex-grow: 1;
    }

    &.xbox {
        outline-color: #4EBF5B;
        .game-cover-platform {
            aspect-ratio: 93.35/13.34;
            content: url(/Assets/Platforms/Xbox.png);
        }
    }
}